#allowed net for SSH, CDIR, default any
variable "allowednet"{
	type = string
	default = "*"
}

# amount of servers
variable "srvcount" {
	default = 1
}

variable "prefix" {
  default = "pentesting"
}

variable "location" {
  default = "westus2"
}

variable "admin_keydata" {
	default = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCxQgPMct8TecamhmkKtrpoikvcMLMFHOb7D0V8cFoQKnGn52xXyJhLnu//g138RrNjlvOeIxjtPsmp6JWjvvT99Js07a5YGLICaWuUvzkoXJjkw3s6Kpb/+Cv04GzocX3trKr4XWSjuO4m3iWd3hR5/FfKl532anolHRyctHTkuKwpyLWTWYk3gHPCqobz/K/33E7qUHComtSNgFADeUQ3gOl50BpwW3vnHKDIaUgl2Jmp0uGtdMzUs35VaOlOUC/+kCUa7US6sHCl9+yuh98Xm+3T6H4n/XWYNWY/UvEDo7sAIhhx7bHwta+lFtYAjzcsvdXgJeY2GcD0XF/eAdsx"
}

variable "admin_username" {
	default = "malipek"
}

provider "azurerm" {
}

resource "azurerm_resource_group" "main" {
        name = "${var.prefix}_rg"
        location = var.location


        tags = {
    		prefix = var.prefix
  		}

}

resource "azurerm_virtual_network" "main" {
	name                = "${var.prefix}-net"
	address_space       = ["10.0.0.0/16"]
	location            = azurerm_resource_group.main.location
	resource_group_name = azurerm_resource_group.main.name

	tags = {
    		prefix = var.prefix
  	}


}

resource "azurerm_subnet" "internal" {
	name                 = "internal"
	resource_group_name  = azurerm_resource_group.main.name
	virtual_network_name = azurerm_virtual_network.main.name
	address_prefix       = "10.0.2.0/24"

}



resource "azurerm_public_ip" "main" {
	count 						 = var.srvcount
    name                         = format("%s-%03d-public-ip", var.prefix, count.index+1)
    location                     = azurerm_resource_group.main.location
    resource_group_name          = azurerm_resource_group.main.name
    allocation_method            = "Dynamic"

    tags = {
    	prefix = var.prefix
  	}

}


resource "azurerm_network_security_group" "main" {
	count   			= var.srvcount
    name                = format("%s-%03d-secgroup", var.prefix, count.index+1)
    location            = azurerm_resource_group.main.location
    resource_group_name = azurerm_resource_group.main.name
    
    security_rule {
        name                       = "SSH"
        priority                   = 1001
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "Tcp"
        source_port_range          = "*"
        destination_port_range     = "22"
        source_address_prefix      = var.allowednet
        destination_address_prefix = "*"
    }

    tags = {
    	prefix = var.prefix
  	}
}


resource "azurerm_network_interface" "main" {
	count 				= var.srvcount
	name                = format("%s-%03d-nic", var.prefix, count.index+1)
	location            = azurerm_resource_group.main.location
	resource_group_name = azurerm_resource_group.main.name
	network_security_group_id  = azurerm_network_security_group.main.*.id[count.index]

	ip_configuration {
		name                		  = format("%s-%03d-ip-configuration", var.prefix, count.index+1)
		subnet_id                     = azurerm_subnet.internal.id
		private_ip_address_allocation = "Dynamic"
		public_ip_address_id          = azurerm_public_ip.main.*.id[count.index]


	}

	tags = {
    		prefix = var.prefix
  	}

}



resource "azurerm_virtual_machine" "main" {
  count  				= var.srvcount
  name                  = format("%s-%03d-vm", var.prefix, count.index+1)
  location              = azurerm_resource_group.main.location
  resource_group_name   = azurerm_resource_group.main.name
  network_interface_ids = [azurerm_network_interface.main.*.id[count.index]]
  vm_size               = "Standard_DS1_v2"

  delete_os_disk_on_termination = true
  delete_data_disks_on_termination = true

  storage_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "18.04-LTS"
    version   = "latest"
  }
  storage_os_disk {
    name              = format("%s-%03d-osdisk", var.prefix, count.index+1)
    caching           = "ReadWrite"
    create_option     = "FromImage"
    managed_disk_type = "Standard_LRS"
  }

  os_profile {
    computer_name  = format("%s-%03d", var.prefix, count.index+1)
    admin_username = var.admin_username
  }

  os_profile_linux_config {
    disable_password_authentication = true

    ssh_keys {
      path     = "/home/${var.admin_username}/.ssh/authorized_keys"
      key_data = var.admin_keydata
    }
  }

  tags = {
    prefix = var.prefix
  }
}